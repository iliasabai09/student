{"ast":null,"code":"var _jsxFileName = \"/Users/madiyar/Desktop/beauttystore-front/src/Homepage/RegisterForm.js\",\n  _s = $RefreshSig$();\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors()); // Добавьте эту строку для включения CORS\n\nmongoose.connect('mongodb://localhost:27017/your-database-name', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nconst UserSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  }\n});\nconst User = mongoose.model('Register', UserSchema);\napp.post('/register', async (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const newUser = new User({\n    username,\n    password: hashedPassword\n  });\n  try {\n    await newUser.save();\n    res.status(201).send('User registered');\n  } catch (error) {\n    res.status(400).send('Error registering user');\n  }\n});\napp.post('/login', async (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const user = await User.findOne({\n    username\n  });\n  if (!user) {\n    return res.status(400).send('User not found');\n  }\n  const isPasswordValid = await bcrypt.compare(password, user.password);\n  if (!isPasswordValid) {\n    return res.status(400).send('Invalid password');\n  }\n  const token = jwt.sign({\n    userId: user._id\n  }, 'your-secret-key');\n  res.json({\n    token\n  });\n});\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Submitting form:', {\n      username,\n      password\n    });\n    try {\n      const response = await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      console.log('Response:', response.data);\n      setMessage('User registered successfully');\n    } catch (err) {\n      console.error('Error registering user', err);\n      setMessage('Error registering user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"UkS7RHHdqtHpQ+ssTj6NJz5Q4n8=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["express","require","mongoose","bcrypt","jwt","bodyParser","cors","app","use","json","connect","useNewUrlParser","useUnifiedTopology","UserSchema","Schema","username","type","String","required","unique","password","User","model","post","req","res","body","hashedPassword","hash","newUser","save","status","send","error","user","findOne","isPasswordValid","compare","token","sign","userId","_id","PORT","process","env","listen","console","log","React","useState","axios","jsxDEV","_jsxDEV","Register","_s","setUsername","setPassword","message","setMessage","handleSubmit","e","preventDefault","response","data","err","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/madiyar/Desktop/beauttystore-front/src/Homepage/RegisterForm.js"],"sourcesContent":["const express = require('express');\nconst mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors());  // Добавьте эту строку для включения CORS\n\nmongoose.connect('mongodb://localhost:27017/your-database-name', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nconst UserSchema = new mongoose.Schema({\n  username: { type: String, required: true, unique: true },\n  password: { type: String, required: true }\n});\n\nconst User = mongoose.model('Register', UserSchema);\n\napp.post('/register', async (req, res) => {\n  const { username, password } = req.body;\n\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  const newUser = new User({ username, password: hashedPassword });\n  try {\n    await newUser.save();\n    res.status(201).send('User registered');\n  } catch (error) {\n    res.status(400).send('Error registering user');\n  }\n});\n\napp.post('/login', async (req, res) => {\n  const { username, password } = req.body;\n\n  const user = await User.findOne({ username });\n  if (!user) {\n    return res.status(400).send('User not found');\n  }\n\n  const isPasswordValid = await bcrypt.compare(password, user.password);\n  if (!isPasswordValid) {\n    return res.status(400).send('Invalid password');\n  }\n\n  const token = jwt.sign({ userId: user._id }, 'your-secret-key');\n  res.json({ token });\n});\n\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log('Submitting form:', { username, password });\n\n    try {\n      const response = await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      console.log('Response:', response.data);\n      setMessage('User registered successfully');\n    } catch (err) {\n      console.error('Error registering user', err);\n      setMessage('Error registering user');\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Register</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}